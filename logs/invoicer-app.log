2025-04-21 06:17:27.589 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 17816 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:17:27.590 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:17:27.590 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:17:28.244 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:17:28.315 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2025-04-21 06:17:28.836 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:17:28.846 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:17:28.846 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:17:28.893 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:17:28.893 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1265 ms
2025-04-21 06:17:29.071 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:17:29.141 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:17:29.177 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:17:29.410 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:17:29.436 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:17:29.576 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3356ff58
2025-04-21 06:17:29.577 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:17:29.615 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:17:29.619 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:17:30.447 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:17:30.536 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:17:30.852 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-04-21 06:17:30.852 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:17:30.853 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:17:30.859 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:17:30.860 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-04-21 06:17:30.869 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-04-21 06:17:30.883 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:355)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:227)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:363)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at org.example.config.SecurityConfig$$SpringCGLIB$$0.passwordEncoder(<generated>)
	at org.example.config.SecurityConfig.configureGlobal(SecurityConfig.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:853)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:19:18.550 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 8516 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:19:18.551 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:19:18.551 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:19:19.139 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:19:19.192 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-04-21 06:19:19.683 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:19:19.693 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:19:19.693 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:19:19.742 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:19:19.743 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1151 ms
2025-04-21 06:19:19.885 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:19:19.941 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:19:19.973 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:19:20.175 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:19:20.196 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:19:20.331 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@73b74615
2025-04-21 06:19:20.334 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:19:20.365 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:19:20.368 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:19:21.152 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:19:21.211 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:19:21.495 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-04-21 06:19:21.496 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:19:21.497 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:19:21.501 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:19:21.502 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-04-21 06:19:21.509 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-04-21 06:19:21.523 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:355)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:227)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:363)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at org.example.config.SecurityConfig$$SpringCGLIB$$0.passwordEncoder(<generated>)
	at org.example.config.SecurityConfig.configureGlobal(SecurityConfig.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:853)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:20:08.716 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 6228 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:20:08.717 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:20:08.717 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:20:09.292 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:20:09.349 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.
2025-04-21 06:20:09.871 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:20:09.887 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:20:09.887 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:20:09.944 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:20:09.944 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1186 ms
2025-04-21 06:20:10.073 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:20:10.128 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:20:10.159 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:20:10.345 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:20:10.365 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:20:10.493 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d92e8e2
2025-04-21 06:20:10.494 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:20:10.523 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:20:10.527 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:20:11.273 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:20:11.332 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:20:11.620 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:20:12.307 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:20:12.561 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3e9ed2c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c5abd91, org.springframework.security.web.context.SecurityContextHolderFilter@22944454, org.springframework.security.web.header.HeaderWriterFilter@40d96dd4, org.springframework.web.filter.CorsFilter@ebc1f14, org.springframework.security.web.csrf.CsrfFilter@68997634, org.springframework.security.web.authentication.logout.LogoutFilter@46c805be, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1e9d8137, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bcacf82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43852953, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c2bccb5, org.springframework.security.web.access.ExceptionTranslationFilter@244c3d8d, org.springframework.security.web.access.intercept.AuthorizationFilter@2c2a6ccc]
2025-04-21 06:20:12.771 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:20:12.776 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.492 seconds (process running for 4.778)
2025-04-21 06:20:12.846 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:20:12.861 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:20:12.864 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:20:12.874 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:20:33.995 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:20:33.995 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:20:33.996 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 06:20:37.528 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:20:37.538 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:20:39.389 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:20:39.394 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:20:39.399 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy134.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:20:45.158 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:20:45.159 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:20:45.161 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy134.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.InvoiceController.getAll(InvoiceController.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:20:48.602 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:20:51.680 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:20:51.680 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:20:51.687 [http-nio-8080-exec-5] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-5] Exception processing template "admin/user-list": An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 98 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:181)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 100 common frames omitted
2025-04-21 06:20:51.689 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:181)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:21:03.025 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:21:03.027 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:21:03.030 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy134.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:21:41.164 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:21:41.166 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:21:41.168 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.OPŁACONA
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy134.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.InvoiceController.getAll(InvoiceController.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:22:22.842 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:22:39.401 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:22:39.402 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:22:39.406 [http-nio-8080-exec-3] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-3] Exception processing template "admin/user-list": An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 98 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:181)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 100 common frames omitted
2025-04-21 06:22:39.407 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/user-list.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. "onload"), in which textual data from variables should better be output to "data-*" attributes and then read from the event handler. (template: "admin/user-list" - line 159, col 12)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:181)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:27:08.430 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:27:08.431 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:27:08.438 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:27:12.782 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 3788 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:27:12.782 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:27:12.783 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:27:13.338 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:27:13.395 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
2025-04-21 06:27:13.874 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:27:13.883 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:27:13.884 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:27:13.927 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:27:13.928 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1105 ms
2025-04-21 06:27:14.057 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:27:14.105 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:27:14.134 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:27:14.323 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:27:14.343 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:27:14.462 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@16b64a03
2025-04-21 06:27:14.464 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:27:14.492 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:27:14.496 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:27:15.219 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:27:15.275 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:27:15.577 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:27:16.227 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:27:16.455 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a80f60c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1641c156, org.springframework.security.web.context.SecurityContextHolderFilter@605e50be, org.springframework.security.web.header.HeaderWriterFilter@5e15c93e, org.springframework.web.filter.CorsFilter@1db89221, org.springframework.security.web.csrf.CsrfFilter@1768c0b3, org.springframework.security.web.authentication.logout.LogoutFilter@2d5c1ebf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7d6ec39c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19fe8ac0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b601570, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fcbace0, org.springframework.security.web.access.ExceptionTranslationFilter@33581a91, org.springframework.security.web.access.intercept.AuthorizationFilter@47c57d0f]
2025-04-21 06:27:16.642 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:27:16.648 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.296 seconds (process running for 4.579)
2025-04-21 06:27:16.716 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:27:16.732 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:27:16.735 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:27:16.745 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:27:27.835 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:27:27.835 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:27:27.835 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-21 06:27:30.106 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:27:30.116 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:30.189 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:30.189 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:33.201 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:27:33.206 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:27:33.213 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:27:35.387 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:35.389 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:36.662 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:27:36.662 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:27:36.664 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.InvoiceController.getAll(InvoiceController.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:27:37.709 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:37.710 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:39.401 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:27:42.084 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:42.085 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:46.449 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:27:46.450 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:27:46.452 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:27:48.440 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:48.441 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:50.152 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:27:57.999 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:27:58.000 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:27:59.206 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:27:59.208 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:27:59.210 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:28:01.456 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:28:01.457 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:28:25.552 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:28:25.553 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:28:25.554 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:30:47.436 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:30:47.438 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:30:47.444 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:30:52.489 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 10276 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:30:52.491 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:30:52.492 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:30:53.069 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:30:53.121 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-04-21 06:30:53.603 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:30:53.613 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:30:53.614 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:30:53.664 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:30:53.664 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1131 ms
2025-04-21 06:30:53.789 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:30:53.842 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:30:53.873 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:30:54.068 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:30:54.088 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:30:54.212 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7ed7ae
2025-04-21 06:30:54.213 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:30:54.241 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:30:54.244 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:30:54.964 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:30:55.019 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:30:55.300 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:30:55.938 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:30:56.155 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38cac3f9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@642bd75c, org.springframework.security.web.context.SecurityContextHolderFilter@7aded3b7, org.springframework.security.web.header.HeaderWriterFilter@e5aac4c, org.springframework.web.filter.CorsFilter@2a2e21ea, org.springframework.security.web.csrf.CsrfFilter@265edc64, org.springframework.security.web.authentication.logout.LogoutFilter@1403d762, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57c32102, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33581a91, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@525aeba9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29fea6c2, org.springframework.security.web.access.ExceptionTranslationFilter@45d8fc9f, org.springframework.security.web.access.intercept.AuthorizationFilter@15492e82]
2025-04-21 06:30:56.341 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:30:56.346 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.289 seconds (process running for 4.568)
2025-04-21 06:30:56.414 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:30:56.428 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:30:56.431 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:30:56.441 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:31:08.961 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:31:08.963 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:31:08.968 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:31:20.976 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 15484 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:31:20.977 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:31:20.978 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:31:21.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:31:21.671 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-04-21 06:31:22.132 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:31:22.142 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:31:22.142 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:31:22.190 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:31:22.190 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1171 ms
2025-04-21 06:31:22.317 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:31:22.367 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:31:22.396 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:31:22.590 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:31:22.612 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:31:22.734 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b691611
2025-04-21 06:31:22.735 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:31:22.768 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:31:22.770 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:31:23.552 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:31:23.612 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:31:23.908 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:31:24.537 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:31:24.749 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@57c32102, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@765ea1ac, org.springframework.security.web.context.SecurityContextHolderFilter@6e3f990b, org.springframework.security.web.header.HeaderWriterFilter@45d8fc9f, org.springframework.web.filter.CorsFilter@38cac3f9, org.springframework.security.web.csrf.CsrfFilter@347a171e, org.springframework.security.web.authentication.logout.LogoutFilter@23be5761, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@35ef76a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7aded3b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21bd386c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@642bd75c, org.springframework.security.web.access.ExceptionTranslationFilter@464cbc59, org.springframework.security.web.access.intercept.AuthorizationFilter@780b26f0]
2025-04-21 06:31:24.928 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:31:24.934 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.41 seconds (process running for 4.837)
2025-04-21 06:31:24.995 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:31:25.010 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:31:25.014 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:31:25.025 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:31:30.586 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:31:30.586 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:31:30.586 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-21 06:31:32.140 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:31:32.148 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:31:32.219 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:31:32.223 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:31:32.228 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:31:35.192 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:31:35.193 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:31:35.195 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:31:47.997 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:31:47.998 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:31:48.000 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: No enum constant org.example.model.enums.InvoiceStatus.] with root cause
java.lang.IllegalArgumentException: No enum constant org.example.model.enums.InvoiceStatus.
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.hibernate.type.descriptor.java.EnumJavaType.fromName(EnumJavaType.java:239)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:107)
	at org.hibernate.type.descriptor.java.EnumJavaType.wrap(EnumJavaType.java:33)
	at org.hibernate.dialect.MySQLEnumJdbcType$2.doExtract(MySQLEnumJdbcType.java:76)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.getCurrentRowValue(JdbcValuesResultSetImpl.java:302)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.getJdbcValue(RowProcessingStateStandardImpl.java:119)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.extractRawValue(BasicResultAssembler.java:52)
	at org.hibernate.sql.results.graph.basic.BasicResultAssembler.assemble(BasicResultAssembler.java:59)
	at org.hibernate.sql.results.graph.DomainResultAssembler.assemble(DomainResultAssembler.java:33)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.extractConcreteTypeStateValues(AbstractEntityInitializer.java:1081)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntityInstance(AbstractEntityInitializer.java:838)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeEntity(AbstractEntityInitializer.java:813)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.initializeInstance(AbstractEntityInitializer.java:799)
	at org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:70)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:109)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:383)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:1)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findAll(Unknown Source)
	at org.example.service.InvoiceService.findAll(InvoiceService.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.InvoiceService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.controller.DashboardController.dashboard(DashboardController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 06:32:06.215 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:32:06.215 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:32:06.219 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:34:00.120 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 16452 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:34:00.121 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:34:00.122 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:34:00.684 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:34:00.740 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.
2025-04-21 06:34:01.208 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:34:01.218 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:34:01.218 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:34:01.266 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:34:01.266 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1104 ms
2025-04-21 06:34:01.393 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:34:01.446 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:34:01.478 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:34:01.677 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:34:01.698 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:34:01.817 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68b7bdcb
2025-04-21 06:34:01.819 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:34:01.845 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:34:01.847 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:34:02.566 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:34:02.624 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:34:02.909 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:34:03.563 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:34:03.788 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21c64b8e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@622314c2, org.springframework.security.web.context.SecurityContextHolderFilter@7d6ec39c, org.springframework.security.web.header.HeaderWriterFilter@2a2e21ea, org.springframework.web.filter.CorsFilter@6d2dcd7f, org.springframework.security.web.csrf.CsrfFilter@23be5761, org.springframework.security.web.authentication.logout.LogoutFilter@4f496628, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e643cad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a80f60c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1641c156, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41ed3d2a, org.springframework.security.web.access.ExceptionTranslationFilter@38cac3f9, org.springframework.security.web.access.intercept.AuthorizationFilter@360ea519]
2025-04-21 06:34:03.975 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:34:03.982 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.293 seconds (process running for 4.572)
2025-04-21 06:34:03.990 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 06:34:04.017 [main] DEBUG org.hibernate.SQL - 
    SELECT
        DISTINCT status 
    FROM
        invoice
2025-04-21 06:34:04.031 [main] INFO  o.e.service.DataMigrationService - Znaleziono następujące statusy w bazie: []
2025-04-21 06:34:04.035 [main] DEBUG org.hibernate.SQL - 
    UPDATE
        invoice 
    SET
        status = 'NIEOPLACONA' 
    WHERE
        status IS NULL 
        OR status = ''
2025-04-21 06:34:04.059 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1265, SQLState: 01000
2025-04-21 06:34:04.059 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Data truncated for column 'status' at row 1
2025-04-21 06:34:04.061 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: JDBC exception executing SQL [UPDATE invoice SET status = 'NIEOPLACONA' WHERE status IS NULL OR status = ''] [Data truncated for column 'status' at row 1] [n/a]
org.hibernate.exception.GenericJDBCException: JDBC exception executing SQL [UPDATE invoice SET status = 'NIEOPLACONA' WHERE status IS NULL OR status = ''] [Data truncated for column 'status' at row 1] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.exec.internal.StandardJdbcMutationExecutor.execute(StandardJdbcMutationExecutor.java:101)
	at org.hibernate.query.sql.internal.NativeNonSelectQueryPlanImpl.executeUpdate(NativeNonSelectQueryPlanImpl.java:76)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doExecuteUpdate(NativeQueryImpl.java:833)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:650)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:42)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
Caused by: java.sql.SQLException: Data truncated for column 'status' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.exec.internal.StandardJdbcMutationExecutor.execute(StandardJdbcMutationExecutor.java:87)
	... 37 common frames omitted
2025-04-21 06:34:04.080 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.hibernate.exception.GenericJDBCException: JDBC exception executing SQL [UPDATE invoice SET status = 'NIEOPLACONA' WHERE status IS NULL OR status = ''] [Data truncated for column 'status' at row 1] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.exec.internal.StandardJdbcMutationExecutor.execute(StandardJdbcMutationExecutor.java:101)
	at org.hibernate.query.sql.internal.NativeNonSelectQueryPlanImpl.executeUpdate(NativeNonSelectQueryPlanImpl.java:76)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doExecuteUpdate(NativeQueryImpl.java:833)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:650)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:42)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
Caused by: java.sql.SQLException: Data truncated for column 'status' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.exec.internal.StandardJdbcMutationExecutor.execute(StandardJdbcMutationExecutor.java:87)
	... 37 common frames omitted
2025-04-21 06:34:04.086 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:34:04.088 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:34:04.092 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:39:06.831 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 17652 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:39:06.832 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:39:06.832 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:39:07.428 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:39:07.482 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-04-21 06:39:07.963 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:39:07.972 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:39:07.973 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:39:08.018 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:39:08.018 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1145 ms
2025-04-21 06:39:08.150 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:39:08.200 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:39:08.231 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:39:08.432 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:39:08.453 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:39:08.582 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68b7bdcb
2025-04-21 06:39:08.583 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:39:08.614 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:39:08.618 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:39:09.414 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:39:09.434 [main] DEBUG org.hibernate.SQL - 
    create table customer (
        id bigint not null auto_increment,
        address varchar(255),
        email varchar(255),
        name varchar(255),
        nip varchar(255),
        phone varchar(255),
        regon varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-04-21 06:39:09.452 [main] DEBUG org.hibernate.SQL - 
    create table invoice (
        id bigint not null auto_increment,
        due_date date not null,
        invoice_number varchar(255),
        issue_date date not null,
        notes varchar(255),
        payment_method enum ('PRZELEW','GOTOWKA','KARTA'),
        status enum ('OPLACONA','NIEOPLACONA') not null,
        customer_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-04-21 06:39:09.467 [main] DEBUG org.hibernate.SQL - 
    create table invoice_item (
        id bigint not null auto_increment,
        price float(53) not null,
        product varchar(255),
        quantity integer not null,
        invoice_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-04-21 06:39:09.485 [main] DEBUG org.hibernate.SQL - 
    create table roles (
        id bigint not null auto_increment,
        name enum ('ROLE_ADMIN','ROLE_USER'),
        primary key (id)
    ) engine=InnoDB
2025-04-21 06:39:09.502 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
2025-04-21 06:39:09.518 [main] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint not null auto_increment,
        active bit not null,
        email varchar(255),
        password varchar(255),
        username varchar(50),
        primary key (id)
    ) engine=InnoDB
2025-04-21 06:39:09.536 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       drop index UK_ofx66keruapi6vyqpv6f2or37
2025-04-21 06:39:09.557 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       add constraint UK_ofx66keruapi6vyqpv6f2or37 unique (name)
2025-04-21 06:39:09.578 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_6dotkott2kjsp8vw4d0m25fb7
2025-04-21 06:39:09.579 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-04-21 06:39:09.599 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_r43af9ap4edm43mmtq01oddj6
2025-04-21 06:39:09.600 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2025-04-21 06:39:09.620 [main] DEBUG org.hibernate.SQL - 
    alter table invoice 
       add constraint FK5e32ukwo9uknwhylogvta4po6 
       foreign key (customer_id) 
       references customer (id)
2025-04-21 06:39:09.695 [main] DEBUG org.hibernate.SQL - 
    alter table invoice_item 
       add constraint FKbu6tmpd0mtgu9wrw5bj5uv09v 
       foreign key (invoice_id) 
       references invoice (id)
2025-04-21 06:39:09.770 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
2025-04-21 06:39:09.844 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
2025-04-21 06:39:09.922 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:39:10.220 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:39:10.882 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:39:11.115 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@162f85aa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23dfcae3, org.springframework.security.web.context.SecurityContextHolderFilter@1ca5b7c7, org.springframework.security.web.header.HeaderWriterFilter@721b38e0, org.springframework.web.filter.CorsFilter@f9ad4c9, org.springframework.security.web.csrf.CsrfFilter@6377ec2a, org.springframework.security.web.authentication.logout.LogoutFilter@525aeba9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f7473b2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@673f17f9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b10c5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23be5761, org.springframework.security.web.access.ExceptionTranslationFilter@51f1ee47, org.springframework.security.web.access.intercept.AuthorizationFilter@3c012884]
2025-04-21 06:39:11.314 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:39:11.320 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.939 seconds (process running for 5.236)
2025-04-21 06:39:11.322 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 06:39:11.384 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 06:39:11.412 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 06:39:11.412 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 06:39:11.413 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy150.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:39:11.414 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy150.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:39:11.467 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:39:11.488 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (name) 
    values
        (?)
2025-04-21 06:39:11.496 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:39:11.497 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (name) 
    values
        (?)
2025-04-21 06:39:11.499 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:39:11.566 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:39:11.590 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, password, username) 
    values
        (?, ?, ?, ?)
2025-04-21 06:39:11.601 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:39:11.604 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        customer
        (address, email, name, nip, phone, regon) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-21 06:39:11.605 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        customer
        (address, email, name, nip, phone, regon) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-21 06:39:11.610 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-04-21 06:39:21.163 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:39:21.163 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:39:21.163 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-21 06:39:22.684 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:39:22.691 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:39:22.759 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:39:26.461 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:39:26.462 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:39:27.934 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:39:32.943 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:39:34.788 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:40:50.657 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public java.lang.String org.example.controller.InvoiceController.createOrUpdate(org.example.model.Invoice,org.springframework.web.servlet.mvc.support.RedirectAttributes) with 2 errors: [Field error in object 'invoice' on field 'paymentMethod': rejected value [Przelew]; codes [typeMismatch.invoice.paymentMethod,typeMismatch.paymentMethod,typeMismatch.org.example.model.enums.PaymentMethod,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [invoice.paymentMethod,paymentMethod]; arguments []; default message [paymentMethod]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'org.example.model.enums.PaymentMethod' for property 'paymentMethod'; Failed to convert from type [java.lang.String] to type [@jakarta.persistence.Enumerated org.example.model.enums.PaymentMethod] for value [Przelew]]] [Field error in object 'invoice' on field 'status': rejected value [NIEOPŁACONA]; codes [typeMismatch.invoice.status,typeMismatch.status,typeMismatch.org.example.model.enums.InvoiceStatus,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [invoice.status,status]; arguments []; default message [status]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'org.example.model.enums.InvoiceStatus' for property 'status'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @jakarta.persistence.Enumerated @jakarta.persistence.Convert org.example.model.enums.InvoiceStatus] for value [NIEOPŁACONA]]] ]
2025-04-21 06:41:30.152 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public java.lang.String org.example.controller.InvoiceController.createOrUpdate(org.example.model.Invoice,org.springframework.web.servlet.mvc.support.RedirectAttributes) with 2 errors: [Field error in object 'invoice' on field 'paymentMethod': rejected value [Przelew]; codes [typeMismatch.invoice.paymentMethod,typeMismatch.paymentMethod,typeMismatch.org.example.model.enums.PaymentMethod,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [invoice.paymentMethod,paymentMethod]; arguments []; default message [paymentMethod]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'org.example.model.enums.PaymentMethod' for property 'paymentMethod'; Failed to convert from type [java.lang.String] to type [@jakarta.persistence.Enumerated org.example.model.enums.PaymentMethod] for value [Przelew]]] [Field error in object 'invoice' on field 'status': rejected value [NIEOPŁACONA]; codes [typeMismatch.invoice.status,typeMismatch.status,typeMismatch.org.example.model.enums.InvoiceStatus,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [invoice.status,status]; arguments []; default message [status]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'org.example.model.enums.InvoiceStatus' for property 'status'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @jakarta.persistence.Enumerated @jakarta.persistence.Convert org.example.model.enums.InvoiceStatus] for value [NIEOPŁACONA]]] ]
2025-04-21 06:50:55.612 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:50:55.614 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:50:55.619 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:51:08.335 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 14884 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:51:08.337 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:51:08.337 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:51:08.997 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:51:09.050 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-04-21 06:51:09.555 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:51:09.565 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:51:09.565 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:51:09.617 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:51:09.618 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1240 ms
2025-04-21 06:51:09.767 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:51:09.815 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:51:09.848 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:51:10.030 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:51:10.050 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:51:10.180 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19faedcc
2025-04-21 06:51:10.181 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:51:10.219 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:51:10.224 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:51:10.965 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:51:11.027 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:51:11.343 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:51:11.999 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:51:12.235 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@557734a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d1a1770, org.springframework.security.web.context.SecurityContextHolderFilter@61cb973d, org.springframework.security.web.header.HeaderWriterFilter@62060983, org.springframework.web.filter.CorsFilter@4e51a9f3, org.springframework.security.web.csrf.CsrfFilter@2d5c1ebf, org.springframework.security.web.authentication.logout.LogoutFilter@6d9ebd88, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f2054d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@602af317, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f98e92c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15cf9d44, org.springframework.security.web.access.ExceptionTranslationFilter@1db89221, org.springframework.security.web.access.intercept.AuthorizationFilter@2bde6971]
2025-04-21 06:51:12.438 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:51:12.444 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.737 seconds (process running for 5.478)
2025-04-21 06:51:12.447 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 06:51:12.505 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 06:51:12.527 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 06:51:12.527 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 06:51:12.527 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:51:12.528 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:51:12.582 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:51:12.595 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:51:12.598 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:51:12.608 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:51:18.542 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:51:18.542 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:51:18.543 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 06:51:20.013 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:51:20.021 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:51:20.090 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:21.497 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:22.383 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 06:51:27.421 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 06:51:27.422 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:51:29.371 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:32.678 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:33.761 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:59.909 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:59.937 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        customer
        (address, email, name, nip, phone, regon) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-21 06:51:59.942 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice
        (customer_id, due_date, invoice_number, issue_date, notes, payment_method, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-21 06:51:59.946 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_item
        (invoice_id, price, product, quantity) 
    values
        (?, ?, ?, ?)
2025-04-21 06:51:59.947 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_item
        (invoice_id, price, product, quantity) 
    values
        (?, ?, ?, ?)
2025-04-21 06:51:59.967 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:51:59.974 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:51:59.976 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:52:04.052 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    where
        i1_0.id=?
2025-04-21 06:52:04.054 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:52:13.004 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status,
        i2_0.invoice_id,
        i2_0.id,
        i2_0.price,
        i2_0.product,
        i2_0.quantity 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    left join
        invoice_item i2_0 
            on i1_0.id=i2_0.invoice_id 
    where
        i1_0.id=?
2025-04-21 06:52:13.013 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        invoice 
    set
        customer_id=?,
        due_date=?,
        invoice_number=?,
        issue_date=?,
        notes=?,
        payment_method=?,
        status=? 
    where
        id=?
2025-04-21 06:52:13.025 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:52:13.026 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:52:13.027 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:55:08.755 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:55:08.757 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 06:55:08.762 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 06:55:13.583 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 6436 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 06:55:13.584 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 06:55:13.585 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 06:55:14.146 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 06:55:14.200 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-04-21 06:55:14.714 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 06:55:14.725 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 06:55:14.725 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 06:55:14.773 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 06:55:14.773 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1148 ms
2025-04-21 06:55:14.905 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 06:55:14.956 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 06:55:14.986 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 06:55:15.188 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 06:55:15.212 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 06:55:15.349 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@379f9555
2025-04-21 06:55:15.351 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 06:55:15.383 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 06:55:15.386 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 06:55:16.167 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 06:55:16.223 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 06:55:16.515 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 06:55:17.179 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 06:55:17.406 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@256088a7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f496628, org.springframework.security.web.context.SecurityContextHolderFilter@6b88ef84, org.springframework.security.web.header.HeaderWriterFilter@4de665b7, org.springframework.web.filter.CorsFilter@755ed2e1, org.springframework.security.web.csrf.CsrfFilter@1623e4c8, org.springframework.security.web.authentication.logout.LogoutFilter@7a552fe4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7aa810b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18b36b93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d5c1ebf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d20aae4, org.springframework.security.web.access.ExceptionTranslationFilter@49d69469, org.springframework.security.web.access.intercept.AuthorizationFilter@158ff98a]
2025-04-21 06:55:17.594 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 06:55:17.600 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.451 seconds (process running for 4.733)
2025-04-21 06:55:17.602 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 06:55:17.657 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 06:55:17.677 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 06:55:17.678 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 06:55:17.678 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:55:17.680 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 06:55:17.730 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:55:17.743 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 06:55:17.746 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 06:55:17.756 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 06:55:27.068 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 06:55:27.068 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 06:55:27.069 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 06:55:28.169 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 06:55:28.178 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 06:55:28.256 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:55:28.260 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:55:28.265 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:55:31.161 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    where
        i1_0.id=?
2025-04-21 06:55:31.162 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:55:36.845 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status,
        i2_0.invoice_id,
        i2_0.id,
        i2_0.price,
        i2_0.product,
        i2_0.quantity 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    left join
        invoice_item i2_0 
            on i1_0.id=i2_0.invoice_id 
    where
        i1_0.id=?
2025-04-21 06:55:36.872 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        invoice 
    set
        customer_id=?,
        due_date=?,
        invoice_number=?,
        issue_date=?,
        notes=?,
        payment_method=?,
        status=? 
    where
        id=?
2025-04-21 06:55:36.892 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:55:36.892 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:55:36.894 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:55:45.886 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:55:45.887 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:55:45.890 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:55:58.072 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:55:58.072 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:55:58.075 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 06:56:01.132 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 06:56:01.133 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 06:56:01.135 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:11:31.259 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 07:11:31.261 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 07:11:31.266 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 07:11:45.267 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 13228 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 07:11:45.268 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 07:11:45.269 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 07:11:45.878 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 07:11:45.935 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
2025-04-21 07:11:46.399 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 07:11:46.410 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 07:11:46.410 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 07:11:46.462 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 07:11:46.462 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1149 ms
2025-04-21 07:11:46.607 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 07:11:46.663 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 07:11:46.694 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 07:11:46.910 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 07:11:46.932 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 07:11:47.048 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53ba1175
2025-04-21 07:11:47.050 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 07:11:47.076 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 07:11:47.079 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 07:11:47.824 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 07:11:47.881 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 07:11:48.160 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 07:11:48.810 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 07:11:49.038 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3c242c57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@385865dd, org.springframework.security.web.context.SecurityContextHolderFilter@104305f, org.springframework.security.web.header.HeaderWriterFilter@153de49f, org.springframework.web.filter.CorsFilter@3b1261ed, org.springframework.security.web.csrf.CsrfFilter@19fe8ac0, org.springframework.security.web.authentication.logout.LogoutFilter@602af317, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@755ed2e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@780b26f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35ef76a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23fd9be1, org.springframework.security.web.access.ExceptionTranslationFilter@61ba9c16, org.springframework.security.web.access.intercept.AuthorizationFilter@4f496628]
2025-04-21 07:11:49.224 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 07:11:49.231 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.422 seconds (process running for 4.733)
2025-04-21 07:11:49.233 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 07:11:49.289 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 07:11:49.309 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 07:11:49.309 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 07:11:49.310 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 07:11:49.311 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 07:11:49.365 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 07:11:49.378 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 07:11:49.381 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 07:11:49.390 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 07:11:57.373 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 07:11:57.373 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 07:11:57.374 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 07:11:58.641 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:11:58.650 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:11:58.719 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:11:58.723 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:11:58.730 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:11:59.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:11:59.893 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:11:59.895 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:00.520 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:02.126 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:12:02.128 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:12:03.159 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:03.160 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:03.162 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:03.711 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:03.712 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:03.713 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:04.629 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:05.859 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:12:05.860 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:12:07.701 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:09.449 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:12:09.450 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:12:10.781 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:13.252 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:12:13.253 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:12:14.304 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:15.269 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:15.270 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:15.271 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:16.491 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:12:16.492 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:12:17.736 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:17.737 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:17.738 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:18.325 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:18.325 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:18.327 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:12:19.084 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:12:23.444 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:12:23.445 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:12:23.447 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:31:06.840 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 07:31:06.842 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-04-21 07:31:06.843 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 07:31:06.844 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-04-21 07:31:06.896 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 07:31:06.909 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, password, username) 
    values
        (?, ?, ?, ?)
2025-04-21 07:31:06.918 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-04-21 07:31:17.556 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:31:17.557 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:17.611 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:31:17.612 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:24.613 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:31:24.615 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:24.674 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:31:24.674 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:31:24.676 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:31:26.373 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:31:26.374 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:26.374 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:31.540 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:31:43.818 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:31:43.880 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        active=?,
        email=?,
        password=?,
        username=? 
    where
        id=?
2025-04-21 07:31:43.891 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:31:43.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:43.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:53.287 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:31:53.288 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:31:53.344 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:31:53.344 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:31:53.346 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:31:55.573 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:31:55.574 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:31:55.576 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:31:56.462 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:32:00.031 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:32:00.031 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:32:00.032 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:32:01.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 07:32:02.398 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:32:02.400 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:32:02.401 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:32:52.439 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:32:52.440 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:32:52.442 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        customer
        (address, email, name, nip, phone, regon) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-21 07:32:52.444 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice
        (customer_id, due_date, invoice_number, issue_date, notes, payment_method, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-21 07:32:52.453 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_item
        (invoice_id, price, product, quantity) 
    values
        (?, ?, ?, ?)
2025-04-21 07:32:52.469 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:32:52.470 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:32:52.471 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:32:52.472 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:32:52.473 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:33:00.478 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:33:00.479 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:00.536 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:33:00.537 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:33:00.538 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:33:00.539 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:33:00.540 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:33:02.217 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:33:02.219 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:02.220 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:05.352 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:33:05.355 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        active=?,
        email=?,
        password=?,
        username=? 
    where
        id=?
2025-04-21 07:33:05.363 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:33:05.364 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:05.366 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:15.656 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:33:15.658 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:24.805 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:33:24.806 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:26.196 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 07:33:26.198 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:26.254 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 07:33:26.254 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:33:26.255 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 07:33:26.257 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:33:26.257 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 07:33:27.838 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:33:27.839 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:27.840 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:29.359 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:33:29.360 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        active=?,
        email=?,
        password=?,
        username=? 
    where
        id=?
2025-04-21 07:33:29.368 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:33:29.370 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:33:29.371 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:34:00.938 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:34:00.940 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        active=?,
        email=?,
        password=?,
        username=? 
    where
        id=?
2025-04-21 07:34:00.949 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:34:00.950 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:34:00.950 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:34:15.583 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        r1_0.user_id,
        r1_1.id,
        r1_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
2025-04-21 07:34:15.584 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        active=?,
        email=?,
        password=?,
        username=? 
    where
        id=?
2025-04-21 07:34:15.593 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 07:34:15.594 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 07:34:15.595 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:30:45.229 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 248 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 10:30:45.230 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 10:30:45.231 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 10:30:45.903 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 10:30:45.974 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-04-21 10:30:46.484 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 10:30:46.494 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 10:30:46.494 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 10:30:46.542 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 10:30:46.543 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1271 ms
2025-04-21 10:30:46.710 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 10:30:46.778 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 10:30:46.812 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:30:47.034 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 10:30:47.060 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:30:47.209 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@60a01cb
2025-04-21 10:30:47.211 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:30:47.247 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 10:30:47.251 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 10:30:48.081 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:30:48.132 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add column must_change_password bit not null
2025-04-21 10:30:48.172 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 10:30:48.507 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 10:30:49.272 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 10:30:49.533 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@68fa9450, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64e443c1, org.springframework.security.web.context.SecurityContextHolderFilter@a482d6f, org.springframework.security.web.header.HeaderWriterFilter@2e29a193, org.springframework.web.filter.CorsFilter@3e084d2f, org.springframework.security.web.csrf.CsrfFilter@481a91c3, org.springframework.security.web.authentication.logout.LogoutFilter@5ceafd4b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7a140446, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@81847c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@755e1def, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21232691, org.springframework.security.web.access.ExceptionTranslationFilter@34b01423, org.springframework.security.web.access.intercept.AuthorizationFilter@bd0f846]
2025-04-21 10:30:49.784 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 10:30:49.790 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 5.148 seconds (process running for 6.114)
2025-04-21 10:30:49.792 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 10:30:49.850 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 10:30:49.873 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 10:30:49.873 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 10:30:49.873 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 10:30:49.874 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 10:30:49.926 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 10:30:49.942 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 10:30:49.953 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 10:30:49.955 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 10:31:04.325 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 10:31:04.325 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 10:31:04.326 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 10:31:11.063 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:11.073 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:11.163 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:11.163 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:11.178 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 10:31:11.180 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:11.181 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:11.247 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:11.248 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:11.261 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:11.263 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:18.037 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:18.038 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:18.042 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:31:18.080 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:18.081 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:19.313 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:19.315 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:19.356 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:19.358 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:20.999 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:21.000 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:21.002 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:31:21.036 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:21.038 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:21.868 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:21.870 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:21.896 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:21.897 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:23.131 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:23.131 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:23.133 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:31:23.165 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:23.166 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:23.827 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:23.828 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:23.854 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:23.856 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:24.623 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:24.624 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:24.627 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 10:31:24.627 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:24.628 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:27.003 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:27.005 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:27.006 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:31:27.030 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:27.031 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:37.746 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:37.748 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:37.754 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:31:37.757 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:37.759 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:37.763 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:37.767 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:37.804 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:37.805 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:40.608 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:40.609 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:40.611 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:31:40.611 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:40.612 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:40.615 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:40.616 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:40.652 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:40.654 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:42.042 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:42.044 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:42.046 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:31:42.047 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:42.047 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:31:42.048 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:42.049 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:31:42.082 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:42.083 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:43.809 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:43.810 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:31:43.835 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:31:43.837 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:01.670 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:01.671 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:01.673 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:32:01.674 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:01.675 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:01.676 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:01.677 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:01.709 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:01.710 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:03.390 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:03.391 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:03.393 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 10:32:03.394 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:03.395 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:15.916 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:15.920 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:15.997 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:15.998 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:26.789 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:26.790 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:26.851 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:26.852 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:26.855 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:32:26.856 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:26.857 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:26.858 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:26.859 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:26.890 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:26.891 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:32.550 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:32.552 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:32.554 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:32:32.555 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:32.556 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:32:32.557 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:32.558 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:32:32.580 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:32.580 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:35.209 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:35.210 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:35.213 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:32:35.248 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:35.249 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:37.146 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:37.147 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:37.170 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:37.171 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:41.123 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:41.124 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:32:41.126 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:32:41.144 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:32:41.145 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:44:02.499 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 10:44:02.500 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 10:44:02.508 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 10:51:48.126 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 2220 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 10:51:48.127 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 10:51:48.127 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 10:51:48.732 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 10:51:48.794 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2025-04-21 10:51:49.280 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 10:51:49.289 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 10:51:49.289 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 10:51:49.338 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 10:51:49.338 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1172 ms
2025-04-21 10:51:49.463 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 10:51:49.511 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 10:51:49.542 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:51:49.755 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 10:51:49.776 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:51:49.899 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@844e66d
2025-04-21 10:51:49.900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:51:49.930 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 10:51:49.933 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 10:51:50.713 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:51:50.803 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 10:51:51.102 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 10:51:51.797 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 10:51:52.027 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51cd77b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b891149, org.springframework.security.web.context.SecurityContextHolderFilter@c01fd44, org.springframework.security.web.header.HeaderWriterFilter@2b3c7194, org.springframework.web.filter.CorsFilter@49290bfb, org.springframework.security.web.csrf.CsrfFilter@6d9ebd88, org.springframework.security.web.authentication.logout.LogoutFilter@57d8308d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5fa9a360, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@605d67f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e56373e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e660ff5, org.springframework.security.web.access.ExceptionTranslationFilter@4e51a9f3, org.springframework.security.web.access.intercept.AuthorizationFilter@61a7ed9c]
2025-04-21 10:51:52.221 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 10:51:52.227 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.538 seconds (process running for 4.823)
2025-04-21 10:51:52.229 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 10:51:52.291 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 10:51:52.314 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 10:51:52.314 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 10:51:52.315 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 10:51:52.316 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy151.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 10:51:52.374 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 10:51:52.390 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 10:51:52.400 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 10:51:52.402 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 10:51:56.205 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 10:51:56.205 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 10:51:56.205 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-21 10:51:58.085 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:51:58.093 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:51:58.178 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:51:58.179 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:51:58.185 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:51:58.233 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:51:58.234 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:51:59.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:51:59.893 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:51:59.903 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:51:59.906 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:51:59.908 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:51:59.913 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:51:59.916 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:51:59.963 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:51:59.965 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:01.723 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:01.723 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:01.725 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:52:01.726 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:01.727 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:01.728 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:01.730 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:01.802 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:01.804 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:03.123 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:03.125 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:03.130 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 10:52:03.131 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:03.132 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:11.287 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:11.288 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:11.345 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:11.346 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:11.348 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:52:11.348 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:11.349 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:11.350 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:11.351 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:11.374 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:11.375 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:21.019 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:21.020 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:21.065 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:21.067 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:23.583 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:23.584 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:23.586 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:52:23.587 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:23.588 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:23.589 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:23.589 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:23.613 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:23.614 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:24.442 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:24.443 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:24.445 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 10:52:24.445 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:24.446 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 10:52:24.448 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:24.449 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 10:52:24.484 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:24.485 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:25.063 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:25.064 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:25.065 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 10:52:25.086 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:25.087 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:25.853 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:25.854 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 10:52:25.894 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 10:52:25.896 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:06.055 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:13:06.057 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 11:13:06.064 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 11:13:12.016 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 5724 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 11:13:12.018 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 11:13:12.018 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 11:13:12.655 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 11:13:12.717 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-04-21 11:13:13.199 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 11:13:13.209 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 11:13:13.209 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 11:13:13.255 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 11:13:13.255 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1194 ms
2025-04-21 11:13:13.385 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 11:13:13.437 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 11:13:13.469 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:13:13.675 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 11:13:13.695 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:13:13.823 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ab5924c
2025-04-21 11:13:13.824 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:13:13.854 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 11:13:13.858 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 11:13:14.617 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:13:14.674 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:13:14.963 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 11:13:15.632 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 11:13:15.853 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c479c86, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24bbe1de, org.springframework.security.web.context.SecurityContextHolderFilter@2a3920fe, org.springframework.security.web.header.HeaderWriterFilter@57d8308d, org.springframework.web.filter.CorsFilter@671f8e4a, org.springframework.security.web.csrf.CsrfFilter@6d3e1c6d, org.springframework.security.web.authentication.logout.LogoutFilter@63475e81, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c43f48f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bc2dbcd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f45d62, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35108825, org.springframework.security.web.access.ExceptionTranslationFilter@72d0cbc9, org.springframework.security.web.access.intercept.AuthorizationFilter@2793fafa]
2025-04-21 11:13:16.035 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 11:13:16.041 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.475 seconds (process running for 4.756)
2025-04-21 11:13:16.043 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 11:13:16.119 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 11:13:16.138 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 11:13:16.138 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 11:13:16.139 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:13:16.141 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:13:16.189 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:13:16.202 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:13:16.211 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 11:13:16.213 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 11:13:23.209 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 11:13:23.209 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 11:13:23.210 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-21 11:13:25.424 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:25.433 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:25.518 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:25.518 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:25.527 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:25.531 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:25.533 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:25.538 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:25.542 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:25.640 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:25.640 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:28.517 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:28.518 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:28.521 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:28.522 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:28.557 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:28.559 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:30.851 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:30.853 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:30.854 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:30.855 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:30.856 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:30.857 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:30.858 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:30.895 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:30.896 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:32.244 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:32.245 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:32.248 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:13:32.291 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:32.292 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:32.815 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:32.817 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:32.819 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:13:32.865 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:32.865 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:33.181 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:33.182 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:33.185 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:33.185 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:33.186 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:33.187 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:33.188 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:33.216 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:33.217 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:33.634 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:33.635 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:33.637 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:33.637 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:33.638 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:33.640 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:33.641 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:33.673 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:33.674 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:39.256 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:39.256 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:39.312 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:39.313 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:39.315 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:39.315 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:39.316 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:39.317 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:39.318 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:39.339 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:39.341 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:40.774 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:40.775 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:40.780 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 11:13:40.781 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:40.782 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:41.438 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:41.439 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:41.441 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:13:41.466 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:41.467 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:42.019 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:42.020 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:42.022 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:13:42.057 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:42.059 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:42.831 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:42.832 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:42.834 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:42.835 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:42.835 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:42.836 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:42.837 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:42.859 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:42.860 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:44.213 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:44.214 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:44.216 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 11:13:44.216 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:44.217 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:51.710 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:51.711 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:51.713 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:51.714 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:51.714 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:51.716 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:51.716 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:51.751 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:51.752 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:53.819 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:53.821 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:53.822 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 11:13:53.823 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:53.824 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:59.218 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:59.220 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:59.222 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:59.222 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:59.223 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:59.225 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:59.225 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:59.258 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:59.260 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:59.893 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:59.894 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:13:59.896 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:13:59.897 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:59.898 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:13:59.900 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:59.901 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:13:59.919 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:13:59.920 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:00.806 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:14:00.807 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:00.810 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:14:00.840 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:14:00.841 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:01.729 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:14:01.731 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:01.732 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:14:01.755 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:14:01.755 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:02.787 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:14:02.789 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:02.791 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 11:14:02.792 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:14:02.793 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:15:42.738 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:15:42.741 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 11:15:42.747 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 11:16:17.393 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 5032 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 11:16:17.394 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 11:16:17.394 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 11:16:17.968 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 11:16:18.029 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2025-04-21 11:16:18.514 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 11:16:18.524 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 11:16:18.524 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 11:16:18.572 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 11:16:18.572 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1138 ms
2025-04-21 11:16:18.701 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 11:16:18.753 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 11:16:18.781 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:16:18.970 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 11:16:18.992 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:16:19.110 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ec5f944
2025-04-21 11:16:19.112 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:16:19.139 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 11:16:19.143 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 11:16:19.853 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:16:19.910 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:16:20.190 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 11:16:20.833 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 11:16:21.059 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7110c51e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51cd77b, org.springframework.security.web.context.SecurityContextHolderFilter@654d7914, org.springframework.security.web.header.HeaderWriterFilter@15cf9d44, org.springframework.web.filter.CorsFilter@5b891149, org.springframework.security.web.csrf.CsrfFilter@452ba1c9, org.springframework.security.web.authentication.logout.LogoutFilter@45050433, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@61a7ed9c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44798d81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@605d67f8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49290bfb, org.springframework.security.web.access.ExceptionTranslationFilter@5d1a1770, org.springframework.security.web.access.intercept.AuthorizationFilter@1f9d6cb3]
2025-04-21 11:16:21.240 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 11:16:21.245 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.299 seconds (process running for 4.585)
2025-04-21 11:16:21.247 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 11:16:21.304 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 11:16:21.324 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 11:16:21.325 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 11:16:21.325 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:16:21.326 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:16:21.378 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:16:21.390 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:16:21.399 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 11:16:21.401 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 11:16:28.297 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 11:16:28.297 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 11:16:28.298 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 11:16:29.574 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:29.583 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:29.670 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:29.671 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:29.679 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:16:29.684 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:29.687 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:29.693 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:29.696 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:29.796 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:29.797 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:31.656 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:31.657 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:31.662 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-04-21 11:16:31.663 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:31.664 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:31.700 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:31.701 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:38.391 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:38.393 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:38.395 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:16:38.447 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:38.448 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:39.027 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:39.028 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:39.030 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:16:39.058 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:39.059 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:41.406 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:41.408 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:41.410 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:16:41.411 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:41.412 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:41.414 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:41.415 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:41.455 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:41.456 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:43.850 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:43.852 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:43.854 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:16:43.878 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:43.878 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:52.434 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:52.435 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:52.437 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:16:52.438 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:52.439 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:52.439 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:52.440 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:52.465 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:52.467 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:53.765 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:53.766 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:53.768 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:16:53.804 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:53.806 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:56.235 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:56.237 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:56.239 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:16:56.240 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:56.240 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:16:56.241 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:56.242 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:16:56.269 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:56.270 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:56.825 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:56.826 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:16:56.828 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:16:56.860 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:16:56.861 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:06.321 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:06.323 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:06.325 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:17:06.326 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:06.328 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:06.329 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:06.330 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:06.352 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:06.353 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:11.881 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:11.882 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:11.889 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    where
        i1_0.id=?
2025-04-21 11:17:11.891 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:11.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:17:11.934 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:11.935 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:14.588 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:14.589 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:14.591 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:17:14.592 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:14.593 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:14.594 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:14.595 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:14.617 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:14.618 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:17.452 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:17.453 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:17.455 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:17:17.491 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:17.492 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:25.892 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:25.893 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:17:25.895 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:17:25.896 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:25.897 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:17:25.898 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:25.899 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:17:25.921 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:17:25.922 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:03.282 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:21:03.284 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 11:21:03.288 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 11:21:13.588 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 4560 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 11:21:13.589 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 11:21:13.589 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 11:21:14.195 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 11:21:14.257 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2025-04-21 11:21:14.752 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 11:21:14.761 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 11:21:14.762 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 11:21:14.810 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 11:21:14.810 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1178 ms
2025-04-21 11:21:14.938 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 11:21:14.991 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 11:21:15.024 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:21:15.240 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 11:21:15.264 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:21:15.389 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26a45089
2025-04-21 11:21:15.391 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:21:15.423 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 11:21:15.427 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 11:21:16.158 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:21:16.212 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:21:16.491 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 11:21:17.179 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 11:21:17.406 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@63475e81, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a74b2f1, org.springframework.security.web.context.SecurityContextHolderFilter@ba9a098, org.springframework.security.web.header.HeaderWriterFilter@2cbad233, org.springframework.web.filter.CorsFilter@1af5a36d, org.springframework.security.web.csrf.CsrfFilter@281b0f38, org.springframework.security.web.authentication.logout.LogoutFilter@1f9d6cb3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@50de1fe5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50ebbf73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@72435def, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d8cf302, org.springframework.security.web.access.ExceptionTranslationFilter@6e4a5825, org.springframework.security.web.access.intercept.AuthorizationFilter@9ba0a02]
2025-04-21 11:21:17.588 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 11:21:17.594 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.446 seconds (process running for 4.729)
2025-04-21 11:21:17.596 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 11:21:17.655 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 11:21:17.674 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 11:21:17.674 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 11:21:17.675 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:21:17.676 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:21:17.730 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:21:17.744 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:21:17.753 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 11:21:17.754 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 11:21:22.851 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 11:21:22.851 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 11:21:22.852 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 11:21:24.350 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:24.358 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:24.443 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:24.444 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:24.452 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:21:24.457 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:24.459 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:24.465 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:24.468 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:24.564 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:24.566 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:26.995 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:26.996 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:26.999 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:21:27.054 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:27.056 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:39.123 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:39.124 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:39.126 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:21:39.127 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:39.128 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:39.129 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:39.131 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:39.161 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:39.161 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:39.748 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:39.749 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:39.751 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:21:39.752 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:39.753 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:39.754 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:39.755 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:39.787 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:39.788 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:40.537 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:40.538 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:40.540 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:21:40.566 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:40.567 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:45.746 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:45.747 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:45.751 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:45.768 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.customer_id,
        i1_0.id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    where
        i1_0.customer_id=?
2025-04-21 11:21:59.230 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:59.231 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:59.244 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:21:59.245 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:59.247 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:59.264 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:59.265 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:21:59.267 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:21:59.268 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:59.269 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:21:59.270 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:59.271 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:21:59.307 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:21:59.308 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:26:58.798 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:26:58.800 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 11:26:58.805 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 11:27:05.669 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 5992 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 11:27:05.670 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 11:27:05.670 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 11:27:06.234 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 11:27:06.294 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 5 JPA repository interfaces.
2025-04-21 11:27:06.782 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 11:27:06.791 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 11:27:06.792 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 11:27:06.838 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 11:27:06.839 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1130 ms
2025-04-21 11:27:06.960 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 11:27:07.010 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 11:27:07.040 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:27:07.225 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 11:27:07.246 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:27:07.366 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9205c0a
2025-04-21 11:27:07.367 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:27:07.393 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 11:27:07.396 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 11:27:08.119 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:27:08.173 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:27:08.460 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 11:27:09.115 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 11:27:09.339 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a74b2f1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1af5a36d, org.springframework.security.web.context.SecurityContextHolderFilter@71f8d094, org.springframework.security.web.header.HeaderWriterFilter@55ee9b9b, org.springframework.web.filter.CorsFilter@1d8cf302, org.springframework.security.web.csrf.CsrfFilter@2bde6971, org.springframework.security.web.authentication.logout.LogoutFilter@61a7ed9c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@35965d0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72435def, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34289e5f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44e60564, org.springframework.security.web.access.ExceptionTranslationFilter@31fa7d15, org.springframework.security.web.access.intercept.AuthorizationFilter@50de1fe5]
2025-04-21 11:27:09.522 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 11:27:09.528 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.297 seconds (process running for 4.579)
2025-04-21 11:27:09.530 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 11:27:09.586 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 11:27:09.607 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 11:27:09.608 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 11:27:09.608 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:27:09.609 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy152.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:91)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 11:27:09.661 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:27:09.676 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 11:27:09.686 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
2025-04-21 11:27:09.687 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 11:27:18.697 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 11:27:18.697 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 11:27:18.698 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 11:27:19.931 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:19.939 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:20.023 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:20.024 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:20.032 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:27:20.038 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:20.040 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:20.047 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:20.050 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:20.152 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:20.153 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:21.806 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:21.807 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:21.813 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:27:21.814 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:21.816 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:21.817 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:21.818 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:21.855 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:21.856 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:23.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:23.455 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:23.458 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:27:23.500 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:23.502 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:26.501 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:26.502 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:26.507 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:26.526 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.customer_id,
        i1_0.id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    where
        i1_0.customer_id=?
2025-04-21 11:27:41.495 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:41.497 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:41.509 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.510 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:27:41.510 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.512 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.532 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice
        (customer_id, due_date, invoice_number, issue_date, notes, payment_method, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-21 11:27:41.541 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_item
        (invoice_id, price, product, quantity) 
    values
        (?, ?, ?, ?)
2025-04-21 11:27:41.557 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:41.558 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:41.559 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:27:41.560 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.561 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.562 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:27:41.563 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:41.565 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:41.566 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:27:41.592 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:41.593 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:58.282 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:58.283 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:27:58.286 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0
2025-04-21 11:27:58.325 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:27:58.326 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:02.019 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:28:02.020 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:02.021 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:02.023 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.customer_id,
        i1_0.id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    where
        i1_0.customer_id=?
2025-04-21 11:28:02.051 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2025-04-21 11:28:02.051 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)]
2025-04-21 11:28:14.632 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:28:14.634 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:14.636 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.637 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:28:14.638 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.639 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.640 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice
        (customer_id, due_date, invoice_number, issue_date, notes, payment_method, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-21 11:28:14.641 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_item
        (invoice_id, price, product, quantity) 
    values
        (?, ?, ?, ?)
2025-04-21 11:28:14.662 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:28:14.663 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:14.665 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.customer_id,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0
2025-04-21 11:28:14.665 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.667 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.668 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon 
    from
        customer c1_0 
    where
        c1_0.id=?
2025-04-21 11:28:14.669 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:28:14.670 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:28:14.671 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:28:14.671 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:28:14.695 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:28:14.696 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:20.734 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 11:28:20.735 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 11:28:20.738 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        c1_0.id,
        c1_0.address,
        c1_0.email,
        c1_0.name,
        c1_0.nip,
        c1_0.phone,
        c1_0.regon,
        i1_0.due_date,
        i1_0.invoice_number,
        i1_0.issue_date,
        i1_0.notes,
        i1_0.payment_method,
        i1_0.status 
    from
        invoice i1_0 
    left join
        customer c1_0 
            on c1_0.id=i1_0.customer_id 
    where
        i1_0.id=?
2025-04-21 11:28:20.833 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.price,
        i1_0.product,
        i1_0.quantity 
    from
        invoice_item i1_0 
    where
        i1_0.invoice_id=?
2025-04-21 11:29:19.146 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 11:29:19.148 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 11:29:19.154 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 16:42:48.517 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 312 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 16:42:48.519 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 16:42:48.519 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 16:42:49.151 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 16:42:49.209 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 6 JPA repository interfaces.
2025-04-21 16:42:49.660 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 16:42:49.670 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 16:42:49.670 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 16:42:49.721 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 16:42:49.721 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1167 ms
2025-04-21 16:42:49.866 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 16:42:49.919 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 16:42:49.947 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:42:50.143 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 16:42:50.165 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:42:50.272 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@77c23d90
2025-04-21 16:42:50.273 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:42:50.303 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 16:42:50.307 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 16:42:51.075 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:42:51.118 [main] DEBUG org.hibernate.SQL - 
    create table login_audit (
        id bigint not null auto_increment,
        ip_address varchar(255),
        login_time datetime(6) not null,
        successful bit,
        user_agent varchar(255),
        username varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
2025-04-21 16:42:51.156 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 16:42:51.462 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 16:42:52.108 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 16:42:52.339 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f7473b2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@789a8251, org.springframework.security.web.context.SecurityContextHolderFilter@265edc64, org.springframework.security.web.header.HeaderWriterFilter@51f1ee47, org.springframework.web.filter.CorsFilter@162f85aa, org.springframework.security.web.csrf.CsrfFilter@59412c, org.springframework.security.web.authentication.logout.LogoutFilter@21bd386c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7e820b3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ca5b7c7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3752408b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23dfcae3, org.springframework.security.web.access.ExceptionTranslationFilter@6514666f, org.springframework.security.web.access.intercept.AuthorizationFilter@65d24964]
2025-04-21 16:42:52.521 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 16:42:52.527 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.518 seconds (process running for 4.863)
2025-04-21 16:42:52.529 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 16:42:52.588 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 16:42:52.607 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 16:42:52.607 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 16:42:52.607 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy157.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:98)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:44)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 16:42:52.609 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy157.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:98)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:44)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 16:42:52.615 [main] INFO  org.example.service.InitService - Inicjalizacja danych początkowych aplikacji...
2025-04-21 16:42:52.615 [main] DEBUG org.example.service.InitService - Inicjalizacja ról użytkowników...
2025-04-21 16:42:52.661 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 16:42:52.675 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 16:42:52.676 [main] DEBUG org.example.service.InitService - Sprawdzanie konta administratora...
2025-04-21 16:42:52.678 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 16:42:52.686 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 16:42:52.690 [main] INFO  org.example.service.InitService - Konto administratora admin już istnieje
2025-04-21 16:42:52.690 [main] DEBUG org.example.service.InitService - Sprawdzanie przykładowych klientów...
2025-04-21 16:42:52.700 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 16:42:52.701 [main] INFO  org.example.service.InitService - Baza zawiera już klientów. Pomijam inicjalizację przykładowych klientów.
2025-04-21 16:42:52.701 [main] INFO  org.example.service.InitService - Inicjalizacja danych zakończona pomyślnie
2025-04-21 16:43:03.582 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 16:43:03.583 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-21 16:43:03.588 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-21 16:43:10.241 [main] INFO  o.example.InvoiceSystemApplication - Starting InvoiceSystemApplication using Java 24 with PID 2712 (C:\Users\Sanczo\Desktop\InvoicerApp\target\classes started by Sanczo in C:\Users\Sanczo\Desktop\InvoicerApp)
2025-04-21 16:43:10.242 [main] DEBUG o.example.InvoiceSystemApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-04-21 16:43:10.243 [main] INFO  o.example.InvoiceSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-21 16:43:10.814 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-21 16:43:10.876 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 6 JPA repository interfaces.
2025-04-21 16:43:11.365 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-21 16:43:11.374 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-21 16:43:11.375 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-04-21 16:43:11.420 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-21 16:43:11.421 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1136 ms
2025-04-21 16:43:11.544 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-21 16:43:11.589 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-21 16:43:11.626 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:43:11.807 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-21 16:43:11.828 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:43:11.948 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45bd4753
2025-04-21 16:43:11.950 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:43:11.976 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-04-21 16:43:11.979 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-21 16:43:12.717 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:43:12.780 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-21 16:43:13.104 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-21 16:43:13.773 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-21 16:43:14.006 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ead0ae1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@829264f, org.springframework.security.web.context.SecurityContextHolderFilter@26ddfb1b, org.springframework.security.web.header.HeaderWriterFilter@68a06679, org.springframework.web.filter.CorsFilter@55307965, org.springframework.security.web.csrf.CsrfFilter@35815f9d, org.springframework.security.web.authentication.logout.LogoutFilter@50912319, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@70d5b235, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@437160a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b52bc7b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@674c1672, org.springframework.security.web.access.ExceptionTranslationFilter@68435eec, org.springframework.security.web.access.intercept.AuthorizationFilter@36fe079c]
2025-04-21 16:43:14.185 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-21 16:43:14.190 [main] INFO  o.example.InvoiceSystemApplication - Started InvoiceSystemApplication in 4.391 seconds (process running for 4.676)
2025-04-21 16:43:14.193 [main] INFO  o.e.service.DataMigrationService - Rozpoczynam naprawę danych statusów faktur...
2025-04-21 16:43:14.255 [main] DEBUG org.hibernate.SQL - 
    SELECT
        COLUMN_NAME,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH,
        COLUMN_TYPE 
    FROM
        INFORMATION_SCHEMA.COLUMNS 
    WHERE
        TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'invoice' 
        AND COLUMN_NAME = 'status'
2025-04-21 16:43:14.276 [main] INFO  o.e.service.DataMigrationService - Kolumna 'status' ma typ: enum z maksymalną długością: 11 (pełny typ: enum('OPLACONA','NIEOPLACONA'))
2025-04-21 16:43:14.276 [main] INFO  o.e.service.DataMigrationService - Zmieniam kolumnę 'status' z ENUM na VARCHAR(20)...
2025-04-21 16:43:14.276 [main] ERROR o.e.service.DataMigrationService - Błąd podczas sprawdzania/naprawiania schematu bazy danych: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy157.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:98)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:44)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 16:43:14.278 [main] ERROR o.e.service.DataMigrationService - Błąd podczas naprawy statusów faktur: Executing an update/delete query
jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:517)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:646)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy157.executeUpdate(Unknown Source)
	at org.example.service.DataMigrationService.checkAndFixDatabaseSchema(DataMigrationService.java:98)
	at org.example.service.DataMigrationService.fixInvoiceStatusesOnStartup(DataMigrationService.java:44)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at org.example.service.DataMigrationService$$SpringCGLIB$$0.fixInvoiceStatusesOnStartup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:168)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:348)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.InvoiceSystemApplication.main(InvoiceSystemApplication.java:9)
2025-04-21 16:43:14.284 [main] INFO  org.example.service.InitService - Inicjalizacja danych początkowych aplikacji...
2025-04-21 16:43:14.285 [main] DEBUG org.example.service.InitService - Inicjalizacja ról użytkowników...
2025-04-21 16:43:14.333 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 16:43:14.346 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 16:43:14.347 [main] DEBUG org.example.service.InitService - Sprawdzanie konta administratora...
2025-04-21 16:43:14.349 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.must_change_password,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-04-21 16:43:14.359 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        user_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-04-21 16:43:14.363 [main] INFO  org.example.service.InitService - Konto administratora admin już istnieje
2025-04-21 16:43:14.363 [main] DEBUG org.example.service.InitService - Sprawdzanie przykładowych klientów...
2025-04-21 16:43:14.377 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        customer c1_0
2025-04-21 16:43:14.378 [main] INFO  org.example.service.InitService - Baza zawiera już klientów. Pomijam inicjalizację przykładowych klientów.
2025-04-21 16:43:14.378 [main] INFO  org.example.service.InitService - Inicjalizacja danych zakończona pomyślnie
2025-04-21 16:43:34.190 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-21 16:43:34.190 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-21 16:43:34.191 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-21 16:43:35.728 [http-nio-8080-exec-4] ERROR o.e.exception.GlobalExceptionHandler - Wystąpił nieoczekiwany błąd: Request method 'POST' is not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 16:43:48.442 [http-nio-8080-exec-8] ERROR o.e.exception.GlobalExceptionHandler - Wystąpił nieoczekiwany błąd: Request method 'POST' is not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-21 16:44:03.453 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 16:44:03.455 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-04-21 16:44:03.457 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-04-21 16:44:03.458 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-04-21 16:44:03.521 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-04-21 16:44:03.522 [http-nio-8080-exec-6] INFO  org.example.service.UserService - Rejestracja nowego użytkownika: sanczo
2025-04-21 16:44:03.533 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, must_change_password, password, username) 
    values
        (?, ?, ?, ?, ?)
2025-04-21 16:44:03.541 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-04-21 16:44:10.965 [http-nio-8080-exec-8] ERROR o.e.exception.GlobalExceptionHandler - Wystąpił nieoczekiwany błąd: Request method 'POST' is not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
